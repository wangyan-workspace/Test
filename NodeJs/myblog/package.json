{
  "name": "myblog",
  "version": "1.0.0",
  "description": "1.登录/注册     2.文章列表     3.发表文章     4.文章评论 ## (二)项目结构设计     1.node_modules: 各种npm包     2.views: 视图文件(html,ejs)     3.public         3.1 images: 存放图片         3.2 javascripts: 存放js文件         3.3 stylesheets: 存放css文件     4.router: 路由文件     5.controllers: 控制器文件     6.modules: 数据模型文件(数据库操作相关的文件)     7.config: 配置文件     8.app.js: 项目的启动(入口)文件     9.package.json: 项目的配置文件 ## (三)数据库设计     1.名词解释：         1.1ER图(Entity Relationship): 用来描绘数据库表结构之间的关系         1.2主键(Primary Key):用来确保表中记录的唯一性         1.2外键(Foregin Key):用来维护父表和子表之间的关系，外键需要进行配置，外键的命名规范：fk_父表名_子表名_外键名     2.数据库表间关系         2.1 一对多：最常见，比如一个用户可以发表多个文章，数据库中通过在子表中放置一个外键来维护一对多的关系         2.2 一对一： 用户与身份证信息，数据库中使用『唯一外键』和『主键关联』两种方式维护一对一关系         2.3 多对多： 老师与学生信息，数据库中通过再创建一个第三张表，来维护多对多关系     3.数据库设计         3.1 t_user：用户名         3.2 t_blog: 文章表",
  "main": "app.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@koa/router": "^10.0.0",
    "ejs": "^3.1.5",
    "koa": "^2.13.1",
    "koa-bodyparser": "^4.3.0",
    "koa-session": "^6.1.0",
    "koa-static": "^5.0.0",
    "koa-views": "^7.0.0",
    "mysql": "^2.18.1"
  }
}
